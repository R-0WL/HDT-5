{"ast":null,"code":"import React,{useState}from'react';import{runSimulation,getExperiments}from'../api/simulationApi';import Header from'./layout/Header';import Navigation from'./layout/Navigation';import ParametersForm from'./simulation/ParametersForm';import MemoryMonitor from'./simulation/MemoryMonitor';import LifecycleView from'./simulation/LifecycleView';import Results from'./results/Results';import ProcessesList from'./settings/ProcessesList';import ExperimentOptions from'./settings/ExperimentOptions';import InfoPanel from'./layout/InfoPanel';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// Estado para parámetros de simulación\nconst[params,setParams]=useState({numProcesses:50,arrivalInterval:10,ramMemory:100,instructionsPerUnit:3,numCpus:1,includeTimeSeries:true});// Estado para pestañas de navegación\nconst[activeTab,setActiveTab]=useState('simulation');// Estados para resultados y datos de simulación\nconst[results,setResults]=useState(null);const[loading,setLoading]=useState(false);const[processes,setProcesses]=useState([]);const[memoryUsed,setMemoryUsed]=useState(45);// Valor de ejemplo\nconst[stateCounts,setStateCounts]=useState({new:1,ready:2,running:1,waiting:1,terminated:0});// Trigger para actualizar gráficas\nconst[refreshGraphs,setRefreshGraphs]=useState(0);// Iniciar una simulación\nconst startSimulation=async()=>{setLoading(true);try{const data=await runSimulation(params);setResults(data);if(data.processes){setProcesses(data.processes.slice(0,10));// Mostrar solo los primeros 10\n}if(data.timeSeriesData&&data.timeSeriesData.length>0){// Tomar el último registro de series temporales para mostrar el estado final\nconst lastEntry=data.timeSeriesData[data.timeSeriesData.length-1];setMemoryUsed(params.ramMemory-lastEntry.memoryLevel);setStateCounts(lastEntry.statesCount);}// Incrementar el contador para actualizar gráficas\nsetRefreshGraphs(prev=>prev+1);// Cambiar a la pestaña de resultados\nsetActiveTab('results');}catch(error){console.error(\"Error en la simulación:\",error);alert(\"Error al ejecutar la simulación. Consulta la consola para más detalles.\");}finally{setLoading(false);}};// Ejecutar todos los experimentos\nconst runAllExperiments=async()=>{setLoading(true);try{await getExperiments();// Incrementar el contador para actualizar gráficas\nsetRefreshGraphs(prev=>prev+1);setActiveTab('results');alert(\"Todos los experimentos han sido ejecutados y las gráficas han sido generadas.\");}catch(error){console.error(\"Error al ejecutar experimentos:\",error);alert(\"Error al ejecutar los experimentos. Consulta la consola para más detalles.\");}finally{setLoading(false);}};// Manejar cambios en los parámetros\nconst handleParamChange=(name,value)=>{setParams({...params,[name]:value});};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-b from-blue-400 to-blue-600 min-h-screen font-sans\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Navigation,{activeTab:activeTab,setActiveTab:setActiveTab}),/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-4\",children:[activeTab==='simulation'&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsx(ParametersForm,{params:params,loading:loading,onParamChange:handleParamChange,onStartSimulation:startSimulation}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(MemoryMonitor,{memoryUsed:memoryUsed,totalMemory:params.ramMemory}),/*#__PURE__*/_jsx(LifecycleView,{stateCounts:stateCounts})]})]}),activeTab==='results'&&/*#__PURE__*/_jsx(Results,{refreshTrigger:refreshGraphs}),activeTab==='settings'&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsx(ProcessesList,{processes:processes}),/*#__PURE__*/_jsx(ExperimentOptions,{onRunExperiment:newParams=>{// Actualizar parámetros y ejecutar simulación\nObject.keys(newParams).forEach(key=>{handleParamChange(key,newParams[key]);});startSimulation();},onRunAllExperiments:runAllExperiments,loading:loading,onGoToResults:()=>setActiveTab('results')})]})]}),/*#__PURE__*/_jsx(InfoPanel,{})]});};export default App;","map":{"version":3,"names":["React","useState","runSimulation","getExperiments","Header","Navigation","ParametersForm","MemoryMonitor","LifecycleView","Results","ProcessesList","ExperimentOptions","InfoPanel","jsx","_jsx","jsxs","_jsxs","App","params","setParams","numProcesses","arrivalInterval","ramMemory","instructionsPerUnit","numCpus","includeTimeSeries","activeTab","setActiveTab","results","setResults","loading","setLoading","processes","setProcesses","memoryUsed","setMemoryUsed","stateCounts","setStateCounts","new","ready","running","waiting","terminated","refreshGraphs","setRefreshGraphs","startSimulation","data","slice","timeSeriesData","length","lastEntry","memoryLevel","statesCount","prev","error","console","alert","runAllExperiments","handleParamChange","name","value","className","children","onParamChange","onStartSimulation","totalMemory","refreshTrigger","onRunExperiment","newParams","Object","keys","forEach","key","onRunAllExperiments","onGoToResults"],"sources":["C:/Users/Fatima/Desktop/PROGRA/HDT-5/simulador-so/frontend/src/components/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { runSimulation, getExperiments } from '../api/simulationApi';\r\nimport Header from './layout/Header';\r\nimport Navigation from './layout/Navigation';\r\nimport ParametersForm from './simulation/ParametersForm';\r\nimport MemoryMonitor from './simulation/MemoryMonitor';\r\nimport LifecycleView from './simulation/LifecycleView';\r\nimport Results from './results/Results';\r\nimport ProcessesList from './settings/ProcessesList';\r\nimport ExperimentOptions from './settings/ExperimentOptions';\r\nimport InfoPanel from './layout/InfoPanel';\r\n\r\nconst App = () => {\r\n  // Estado para parámetros de simulación\r\n  const [params, setParams] = useState({\r\n    numProcesses: 50,\r\n    arrivalInterval: 10,\r\n    ramMemory: 100,\r\n    instructionsPerUnit: 3,\r\n    numCpus: 1,\r\n    includeTimeSeries: true\r\n  });\r\n  \r\n  // Estado para pestañas de navegación\r\n  const [activeTab, setActiveTab] = useState('simulation');\r\n  \r\n  // Estados para resultados y datos de simulación\r\n  const [results, setResults] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [processes, setProcesses] = useState([]);\r\n  const [memoryUsed, setMemoryUsed] = useState(45); // Valor de ejemplo\r\n  const [stateCounts, setStateCounts] = useState({\r\n    new: 1, ready: 2, running: 1, waiting: 1, terminated: 0\r\n  });\r\n  \r\n  // Trigger para actualizar gráficas\r\n  const [refreshGraphs, setRefreshGraphs] = useState(0);\r\n  \r\n  // Iniciar una simulación\r\n  const startSimulation = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await runSimulation(params);\r\n      setResults(data);\r\n      \r\n      if (data.processes) {\r\n        setProcesses(data.processes.slice(0, 10)); // Mostrar solo los primeros 10\r\n      }\r\n      \r\n      if (data.timeSeriesData && data.timeSeriesData.length > 0) {\r\n        // Tomar el último registro de series temporales para mostrar el estado final\r\n        const lastEntry = data.timeSeriesData[data.timeSeriesData.length - 1];\r\n        setMemoryUsed(params.ramMemory - lastEntry.memoryLevel);\r\n        setStateCounts(lastEntry.statesCount);\r\n      }\r\n      \r\n      // Incrementar el contador para actualizar gráficas\r\n      setRefreshGraphs(prev => prev + 1);\r\n      \r\n      // Cambiar a la pestaña de resultados\r\n      setActiveTab('results');\r\n    } catch (error) {\r\n      console.error(\"Error en la simulación:\", error);\r\n      alert(\"Error al ejecutar la simulación. Consulta la consola para más detalles.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Ejecutar todos los experimentos\r\n  const runAllExperiments = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await getExperiments();\r\n      \r\n      // Incrementar el contador para actualizar gráficas\r\n      setRefreshGraphs(prev => prev + 1);\r\n      \r\n      setActiveTab('results');\r\n      alert(\"Todos los experimentos han sido ejecutados y las gráficas han sido generadas.\");\r\n    } catch (error) {\r\n      console.error(\"Error al ejecutar experimentos:\", error);\r\n      alert(\"Error al ejecutar los experimentos. Consulta la consola para más detalles.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Manejar cambios en los parámetros\r\n  const handleParamChange = (name, value) => {\r\n    setParams({\r\n      ...params,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"bg-gradient-to-b from-blue-400 to-blue-600 min-h-screen font-sans\">\r\n      <Header />\r\n      <Navigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      <div className=\"container mx-auto p-4\">\r\n        {/* Pestaña de simulación */}\r\n        {activeTab === 'simulation' && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <ParametersForm \r\n              params={params} \r\n              loading={loading}\r\n              onParamChange={handleParamChange}\r\n              onStartSimulation={startSimulation}\r\n            />\r\n            <div className=\"space-y-4\">\r\n              <MemoryMonitor memoryUsed={memoryUsed} totalMemory={params.ramMemory} />\r\n              <LifecycleView stateCounts={stateCounts} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Pestaña de resultados */}\r\n        {activeTab === 'results' && <Results refreshTrigger={refreshGraphs} />}\r\n        \r\n        {/* Pestaña de configuración */}\r\n        {activeTab === 'settings' && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <ProcessesList processes={processes} />\r\n            <ExperimentOptions \r\n              onRunExperiment={(newParams) => {\r\n                // Actualizar parámetros y ejecutar simulación\r\n                Object.keys(newParams).forEach(key => {\r\n                  handleParamChange(key, newParams[key]);\r\n                });\r\n                startSimulation();\r\n              }} \r\n              onRunAllExperiments={runAllExperiments}\r\n              loading={loading}\r\n              onGoToResults={() => setActiveTab('results')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <InfoPanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}